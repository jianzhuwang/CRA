
name: "LeNet"

input: "modal1"
input_dim: 7810
input_dim: 1
input_dim: 32
input_dim: 32

input: "modal2"
input_dim: 7810
input_dim: 1
input_dim: 32
input_dim: 32

input: "modal3"
input_dim: 7810
input_dim: 1
input_dim: 32
input_dim: 32

input: "modal4"
input_dim: 7810
input_dim: 1
input_dim: 32
input_dim: 32

input: "modal5"
input_dim: 7810
input_dim: 1
input_dim: 32
input_dim: 32

layer {
  name: "concateAllData"
  type: "Concat"
  bottom: "modal1"
  bottom: "modal2"
  bottom: "modal3"
  bottom: "modal4"
  bottom: "modal5"
  top: "ra1_input"
  concat_param {
    axis: 2
  }
}

#--------------------------
# ra1

layer {
  name: "ra1_conv1"
  type: "Convolution"
  bottom: "ra1_input"
  top: "ra1_conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 5
    stride: 2
    pad: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra1_conv1_relu"
  type: "ReLU"
  bottom: "ra1_conv1"
  top: "ra1_conv1"
}



layer {
  name: "ra1_conv2"
  type: "Convolution"
  bottom: "ra1_conv1"
  top: "ra1_conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra1_conv2_relu"
  type: "ReLU"
  bottom: "ra1_conv2"
  top: "ra1_conv2"
}


layer {
  name: "ra1_ip1"
  type: "InnerProduct"
  bottom: "ra1_conv2"
  top: "ra1_ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  inner_product_param {
    num_output: 2056
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }  
}

layer {
  name: "ra1_ip1_relu"
  type: "ReLU"
  bottom: "ra1_ip1"
  top: "ra1_ip1"
}

layer {
  name: "ra1_ip2"
  type: "InnerProduct"
  bottom: "ra1_ip1"
  top: "ra1_ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  inner_product_param {
    num_output: 2560
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }  
}

layer {
  name: "ra1_ip2_relu"
  type: "ReLU"
  bottom: "ra1_ip2"
  top: "ra1_ip2"
}



layer {
  name: "ra1_ip2_reshape"
  type: "Reshape"
  bottom: "ra1_ip2"
  top: "ra1_ip2_reshape"
  reshape_param {
      shape {
        dim: 0  # copy the dimension from below
        dim: 8
        dim: 40
        dim: 8
      }
    }
}









layer {
  name: "ra1_deconv2"
  type: "Deconvolution"
  bottom: "ra1_ip2_reshape"
  top: "ra1_deconv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 5
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra1_deconv2_relu"
  type: "ReLU"
  bottom: "ra1_deconv2"
  top: "ra1_deconv2"
}


layer {
  name: "ra1_deconv1"
  type: "Deconvolution"
  bottom: "ra1_deconv2"
  top: "ra1_deconv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 5
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra1_deconv1_crop"
  type: "Crop"
  bottom: "ra1_deconv1"
  bottom: "ra1_input"
  top: "ra1_deconv1_crop"
  crop_param{
    axis: 2
    offset: 1
  }
}

layer {
  name: "ra1_sum"
  type: "Eltwise"
  bottom: "ra1_deconv1_crop"
  bottom: "ra1_input"
  top: "ra2_input"
  eltwise_param{
    operation: SUM
  }
}

#--------------------------
# ra2

layer {
  name: "ra2_conv1"
  type: "Convolution"
  bottom: "ra2_input"
  top: "ra2_conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 5
    stride: 2
    pad: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra2_conv1_relu"
  type: "ReLU"
  bottom: "ra2_conv1"
  top: "ra2_conv1"
}



layer {
  name: "ra2_conv2"
  type: "Convolution"
  bottom: "ra2_conv1"
  top: "ra2_conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra2_conv2_relu"
  type: "ReLU"
  bottom: "ra2_conv2"
  top: "ra2_conv2"
}


layer {
  name: "ra2_ip1"
  type: "InnerProduct"
  bottom: "ra2_conv2"
  top: "ra2_ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  inner_product_param {
    num_output: 2056
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }  
}

layer {
  name: "ra2_ip1_relu"
  type: "ReLU"
  bottom: "ra2_ip1"
  top: "ra2_ip1"
}

layer {
  name: "ra2_ip2"
  type: "InnerProduct"
  bottom: "ra2_ip1"
  top: "ra2_ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  inner_product_param {
    num_output: 2560
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }  
}

layer {
  name: "ra2_ip2_relu"
  type: "ReLU"
  bottom: "ra2_ip2"
  top: "ra2_ip2"
}



layer {
  name: "ra2_ip2_reshape"
  type: "Reshape"
  bottom: "ra2_ip2"
  top: "ra2_ip2_reshape"
  reshape_param {
      shape {
        dim: 0  # copy the dimension from below
        dim: 8
        dim: 40
        dim: 8
      }
    }
}


layer {
  name: "ra2_deconv2"
  type: "Deconvolution"
  bottom: "ra2_ip2_reshape"
  top: "ra2_deconv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 5
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra2_deconv2_relu"
  type: "ReLU"
  bottom: "ra2_deconv2"
  top: "ra2_deconv2"
}


layer {
  name: "ra2_deconv1"
  type: "Deconvolution"
  bottom: "ra2_deconv2"
  top: "ra2_deconv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 5
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "ra2_deconv1_crop"
  type: "Crop"
  bottom: "ra2_deconv1"
  bottom: "ra2_input"
  top: "ra2_deconv1_crop"
  crop_param{
    axis: 2
    offset: 1
  }
}

layer {
  name: "ra2_sum"
  type: "Eltwise"
  bottom: "ra2_deconv1_crop"
  bottom: "ra2_input"
  top: "output"
  eltwise_param{
    operation: SUM
  }
}


